// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: yolocs/wrappers/audit_wrapper.proto

package wrappers

import (
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	audit "google.golang.org/genproto/googleapis/cloud/audit"
	v2 "google.golang.org/genproto/googleapis/logging/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuditRecord_LogType int32

const (
	AuditRecord_UNSPECIFIED AuditRecord_LogType = 0
	// Administrative actions or changes to configuration through public APIs.
	AuditRecord_ADMIN_ACTIVITY AuditRecord_LogType = 1
	// Administrative actions or changes to configuration initiated by internal
	// system not through public APIs.
	AuditRecord_SYSTEM_EVENT AuditRecord_LogType = 2
	// Reads of configuration data and all access to user data through public
	// APIs.
	AuditRecord_DATA_ACCESS AuditRecord_LogType = 3
)

// Enum value maps for AuditRecord_LogType.
var (
	AuditRecord_LogType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ADMIN_ACTIVITY",
		2: "SYSTEM_EVENT",
		3: "DATA_ACCESS",
	}
	AuditRecord_LogType_value = map[string]int32{
		"UNSPECIFIED":    0,
		"ADMIN_ACTIVITY": 1,
		"SYSTEM_EVENT":   2,
		"DATA_ACCESS":    3,
	}
)

func (x AuditRecord_LogType) Enum() *AuditRecord_LogType {
	p := new(AuditRecord_LogType)
	*p = x
	return p
}

func (x AuditRecord_LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditRecord_LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_yolocs_wrappers_audit_wrapper_proto_enumTypes[0].Descriptor()
}

func (AuditRecord_LogType) Type() protoreflect.EnumType {
	return &file_yolocs_wrappers_audit_wrapper_proto_enumTypes[0]
}

func (x AuditRecord_LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditRecord_LogType.Descriptor instead.
func (AuditRecord_LogType) EnumDescriptor() ([]byte, []int) {
	return file_yolocs_wrappers_audit_wrapper_proto_rawDescGZIP(), []int{0, 0}
}

type AuditRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogType   AuditRecord_LogType   `protobuf:"varint,1,opt,name=log_type,json=logType,proto3,enum=yolocs.wrappers.AuditRecord_LogType" json:"log_type,omitempty"`
	Log       *audit.AuditLog       `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty"`
	Operation *v2.LogEntryOperation `protobuf:"bytes,5,opt,name=operation,proto3" json:"operation,omitempty"`
	Labels    map[string]string     `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AuditRecord) Reset() {
	*x = AuditRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yolocs_wrappers_audit_wrapper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRecord) ProtoMessage() {}

func (x *AuditRecord) ProtoReflect() protoreflect.Message {
	mi := &file_yolocs_wrappers_audit_wrapper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRecord.ProtoReflect.Descriptor instead.
func (*AuditRecord) Descriptor() ([]byte, []int) {
	return file_yolocs_wrappers_audit_wrapper_proto_rawDescGZIP(), []int{0}
}

func (x *AuditRecord) GetLogType() AuditRecord_LogType {
	if x != nil {
		return x.LogType
	}
	return AuditRecord_UNSPECIFIED
}

func (x *AuditRecord) GetLog() *audit.AuditLog {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *AuditRecord) GetOperation() *v2.LogEntryOperation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *AuditRecord) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var file_yolocs_wrappers_audit_wrapper_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         11716886,
		Name:          "yolocs.wrappers.log_name_suffix",
		Tag:           "bytes,11716886,opt,name=log_name_suffix",
		Filename:      "yolocs/wrappers/audit_wrapper.proto",
	},
}

// Extension fields to descriptor.EnumValueOptions.
var (
	// optional string log_name_suffix = 11716886;
	E_LogNameSuffix = &file_yolocs_wrappers_audit_wrapper_proto_extTypes[0]
)

var File_yolocs_wrappers_audit_wrapper_proto protoreflect.FileDescriptor

var file_yolocs_wrappers_audit_wrapper_proto_rawDesc = []byte{
	0x0a, 0x23, 0x79, 0x6f, 0x6c, 0x6f, 0x63, 0x73, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x79, 0x6f, 0x6c, 0x6f, 0x63, 0x73, 0x2e, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x32, 0x2f,
	0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb9, 0x04, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x3f, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x79, 0x6f, 0x6c, 0x6f, 0x63, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67,
	0x12, 0x42, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x79, 0x6f, 0x6c, 0x6f, 0x63, 0x73, 0x2e, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xf7, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x28,
	0xb2, 0x91, 0xd9, 0x2c, 0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x75, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0e, 0x41, 0x44, 0x4d, 0x49,
	0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x01, 0x1a, 0x25, 0xb2, 0x91,
	0xd9, 0x2c, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x0c, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x10, 0x02, 0x1a, 0x29, 0xb2, 0x91, 0xd9, 0x2c, 0x24, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x39, 0x0a, 0x0b, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x03, 0x1a, 0x28, 0xb2, 0x91, 0xd9, 0x2c, 0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x6a, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x3a, 0x4c, 0x0a, 0x0f, 0x6c,
	0x6f, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x21,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x96, 0x92, 0xcb, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x6f, 0x6c, 0x6f, 0x63, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yolocs_wrappers_audit_wrapper_proto_rawDescOnce sync.Once
	file_yolocs_wrappers_audit_wrapper_proto_rawDescData = file_yolocs_wrappers_audit_wrapper_proto_rawDesc
)

func file_yolocs_wrappers_audit_wrapper_proto_rawDescGZIP() []byte {
	file_yolocs_wrappers_audit_wrapper_proto_rawDescOnce.Do(func() {
		file_yolocs_wrappers_audit_wrapper_proto_rawDescData = protoimpl.X.CompressGZIP(file_yolocs_wrappers_audit_wrapper_proto_rawDescData)
	})
	return file_yolocs_wrappers_audit_wrapper_proto_rawDescData
}

var file_yolocs_wrappers_audit_wrapper_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yolocs_wrappers_audit_wrapper_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_yolocs_wrappers_audit_wrapper_proto_goTypes = []interface{}{
	(AuditRecord_LogType)(0),            // 0: yolocs.wrappers.AuditRecord.LogType
	(*AuditRecord)(nil),                 // 1: yolocs.wrappers.AuditRecord
	nil,                                 // 2: yolocs.wrappers.AuditRecord.LabelsEntry
	(*audit.AuditLog)(nil),              // 3: google.cloud.audit.AuditLog
	(*v2.LogEntryOperation)(nil),        // 4: google.logging.v2.LogEntryOperation
	(*descriptor.EnumValueOptions)(nil), // 5: google.protobuf.EnumValueOptions
}
var file_yolocs_wrappers_audit_wrapper_proto_depIdxs = []int32{
	0, // 0: yolocs.wrappers.AuditRecord.log_type:type_name -> yolocs.wrappers.AuditRecord.LogType
	3, // 1: yolocs.wrappers.AuditRecord.log:type_name -> google.cloud.audit.AuditLog
	4, // 2: yolocs.wrappers.AuditRecord.operation:type_name -> google.logging.v2.LogEntryOperation
	2, // 3: yolocs.wrappers.AuditRecord.labels:type_name -> yolocs.wrappers.AuditRecord.LabelsEntry
	5, // 4: yolocs.wrappers.log_name_suffix:extendee -> google.protobuf.EnumValueOptions
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	4, // [4:5] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_yolocs_wrappers_audit_wrapper_proto_init() }
func file_yolocs_wrappers_audit_wrapper_proto_init() {
	if File_yolocs_wrappers_audit_wrapper_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yolocs_wrappers_audit_wrapper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yolocs_wrappers_audit_wrapper_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_yolocs_wrappers_audit_wrapper_proto_goTypes,
		DependencyIndexes: file_yolocs_wrappers_audit_wrapper_proto_depIdxs,
		EnumInfos:         file_yolocs_wrappers_audit_wrapper_proto_enumTypes,
		MessageInfos:      file_yolocs_wrappers_audit_wrapper_proto_msgTypes,
		ExtensionInfos:    file_yolocs_wrappers_audit_wrapper_proto_extTypes,
	}.Build()
	File_yolocs_wrappers_audit_wrapper_proto = out.File
	file_yolocs_wrappers_audit_wrapper_proto_rawDesc = nil
	file_yolocs_wrappers_audit_wrapper_proto_goTypes = nil
	file_yolocs_wrappers_audit_wrapper_proto_depIdxs = nil
}
